name: BisqApps

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Project Build & Test

    strategy:
      matrix:
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21 (Azul Zulu)
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'
          cache: gradle

      # Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Clean Gradle and Maven caches
        run: |
          echo ">>> Deleting Gradle and Maven caches to avoid stale jars..."
          rm -rf ~/.gradle/caches ~/.gradle/wrapper ~/.m2/repository/*

      - name: Print Maven repository contents
        run: |
          echo ">>> ~/.m2/repository contents before build:"
          ls -R ~/.m2/repository || echo "Maven repo empty"

      - name: Print Gradle cache contents
        run: |
          echo ">>> ~/.gradle/caches contents before build:"
          ls -R ~/.gradle/caches || echo "Gradle cache empty"


      # Create a fake local.properties file
      - name: Create fake local.properties
        run: |
          echo "KEYSTORE_PATH=/path/to/keystore" > local.properties
          echo "KEYSTORE_PASSWORD=yourKeystorePassword" >> local.properties
          echo "KEY_ALIAS=yourKeyAlias" >> local.properties
          echo "CLI_KEY_ALIAS=yourCliKeyAlias" >> local.properties
          echo "KEY_PASSWORD=yourKeyPassword" >> local.properties
          echo "CLI_KEY_PASSWORD=yourCliKeyPassword" >> local.properties

      # Dump resolved dependencies
      - name: Dump Gradle dependency tree
        run: |
          echo ">>> Dumping dependency tree for androidNode"
          ./gradlew androidNode:dependencies --refresh-dependencies --no-daemon --info

      # Build androidNode with debug logs
      - name: Build project and do node specific tasks
        env:
          CI: true
        run: |
          echo ">>> Starting androidNode build"
          ./gradlew androidNode:clean androidNode:assembleDebug --refresh-dependencies --no-daemon --info
          ./gradlew test --no-daemon --info

      # Build and test androidClient
      - name: Run androidClient Tests
        env:
          CI: true
        run: |
          ./gradlew androidClient:clean androidClient:assembleDebug --refresh-dependencies --no-daemon --info
          ./gradlew androidClient:testDebugUnitTest androidClient:connectedDebugAndroidTest --no-daemon --info

      # iOS Tests
      - name: Run iOS Tests
        if: startsWith(matrix.os, 'macos')
        run: ./gradlew shared:presentation:iosSimulatorArm64Test
