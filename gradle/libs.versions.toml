[versions]
agp = "8.5.0"
android-compileSdk = "34"
android-targetSdk = "34"
android-minSdk = "24"
android-node-minSdk = "31"
androidx-activityCompose = "1.9.2"

androidx-core = "1.13.1"

ktorClientWebsockets = "2.3.5"
ktorSerializationKotlinxJson = "2.3.5"
multiplatformSettingsTest = "1.2.0"
roboelectric = "4.10.3"
androidx-test = "1.6.1"
androidx-test-junit = "1.2.1"
androidx-test-espresso= "3.6.1"

androidx-lifecycle = "2.8.2"
androidx-test-compose-ver = "1.6.8"
androidx-multidex = "2.0.1"
atomicfu = "0.26.1"
bignum-lib= "0.3.10"
bisq-core = "2.1.7"
# API version is usually same as bisq-core but for more control we keep it separatedst
bisq-api = "2.1.7"
coilCompose = "3.0.3"
compose-plugin = "1.7.0"
junit = "4.13.2"
kotlinReflect = "2.0.21"
kotlinxDatetime = "0.4.0"
kotlinxSerialization = "1.7.3"
#ktor = "3.1.0"
ktor = "2.3.4"
mockio = "1.12.0"
kotlin = "2.0.20"
kotlinTestJunit = "2.0.20"
kotlinx = "1.9.0"
kermit = "2.0.4"
buildconfig = "5.5.0"
navigationCompose = "2.7.0-alpha07"
# okio = "3.5.0"
okio = "3.9.1"
serializationPlugin = "2.0.21"
protobuf = "0.9.4"
protob = "4.28.2"
ksp = "2.0.20-1.0.25"

chimp-jsocks-lib = { strictly = '567e1cd6' }
failsafe-lib = { strictly = '3.2.4' }

bouncycastle-lib = { strictly = '1.78.1' }

google-guava-lib = { strictly = '33.2.1-jre' }

apache-httpcomponents-httpclient-lib = { strictly = '4.5.14' } # 5.3.1 would be better but has lot of API changes

koin = "4.0.0"
lombok-lib = { strictly = '1.18.34' }
typesafe-config-lib = { strictly = '1.4.3' }

multiplatform-settings = "1.2.0"
uiGraphicsAndroid = "1.7.8"

[libraries]
atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "atomicfu" }
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coilCompose" }
jetbrains-kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlinReflect" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit-v180 = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlinTestJunit" }
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx" }
kotlinx-coroutines-core-js = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core-js", version.ref = "kotlinxSerialization" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinxSerialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerialization" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-json = { module = "io.ktor:ktor-client-json", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-websockets = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }

mock-io = { module = "io.mockk:mockk", version.ref = "mockio" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-multidex = { group = "androidx.multidex", name = "multidex", version.ref = "androidx-multidex" }
androidx-test-compose = { group = "androidx.compose.ui", name = "ui-test-junit4-android", version.ref = "androidx-test-compose-ver" }
androidx-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest", version.ref = "androidx-test-compose-ver" }

androidx-core = { group = "androidx.core", name = "core", version.ref = "androidx-core" }
multiplatform-settings-test-v120 = { module = "com.russhwolf:multiplatform-settings-test", version.ref = "multiplatformSettingsTest" }
roboelectric = { group = "org.robolectric", name = "robolectric", version.ref = "roboelectric" }
androidx-test = { group = "androidx.test", name = "core", version.ref = "androidx-test" }
androidx-test-espresso = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidx-test-espresso" }
androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }

androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }

bignum = { module = 'com.ionspin.kotlin:bignum', version.ref = 'bignum-lib' }

logging-kermit = { group = "co.touchlab", name = "kermit", version.ref = "kermit" }

lombok = { module = 'org.projectlombok:lombok', version.ref = 'lombok-lib' }

okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
jetbrains-serialization-gradle-plugin = { module = "org.jetbrains.kotlin.plugin.serialization:org.jetbrains.kotlin.plugin.serialization.gradle.plugin", version.ref = "serializationPlugin" }
typesafe-config = { module = 'com.typesafe:config', version.ref = 'typesafe-config-lib' }

bouncycastle = { module = 'org.bouncycastle:bcprov-jdk18on', version.ref = 'bouncycastle-lib' }
bouncycastle-pg = { module = 'org.bouncycastle:bcpg-jdk18on', version.ref = 'bouncycastle-lib' }

navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
protobuf-gradle-plugin = { module = 'com.google.protobuf:protobuf-gradle-plugin', version.ref = 'protobuf' }
protoc = { module = "com.google.protobuf:protoc", version.ref = "protob" }

bisq-core-common = { module = "bisq:common", version.ref = "bisq-core" }
bisq-core-security = { module = "bisq:security", version.ref = "bisq-core" }
bisq-core-settings = { module = "bisq:settings", version.ref = "bisq-core" }
bisq-core-support = { module = "bisq:support", version.ref = "bisq-core" }
bisq-core-trade = { module = "bisq:trade", version.ref = "bisq-core" }
bisq-core-user = { module = "bisq:user", version.ref = "bisq-core" }
bisq-core-network-network = { module = "network:network", version.ref = "bisq-core" }
bisq-core-network-network-identity = { module = "network:network-identity", version.ref = "bisq-core" }
bisq-core-network-socks5-socket-channel = { module = "network:socks5-socket-channel", version.ref = "bisq-core" }
bisq-core-network-i2p = { module = "network:i2p", version.ref = "bisq-core" }
bisq-core-offer = { module = "bisq:offer", version.ref = "bisq-core" }
bisq-core-persistence = { module = "bisq:persistence", version.ref = "bisq-core" }
bisq-core-presentation = { module = "bisq:presentation", version.ref = "bisq-core" }
bisq-core-account = { module = "bisq:account", version.ref = "bisq-core" }
bisq-core-application = { module = "bisq:application", version.ref = "bisq-core" }
bisq-core-bonded-roles = { module = "bisq:bonded-roles", version.ref = "bisq-core" }
bisq-core-chat = { module = "bisq:chat", version.ref = "bisq-core" }
bisq-core-contract = { module = "bisq:contract", version.ref = "bisq-core" }
bisq-core-i18n = { module = "bisq:i18n", version.ref = "bisq-core" }
bisq-core-identity = { module = "bisq:identity", version.ref = "bisq-core" }
bisq-core-bisq-easy = { module = "bisq:bisq-easy", version.ref = "bisq-core" }

# bisq core transitive dependencies
chimp-jsocks = { module = 'com.github.chimp1984:jsocks', version.ref = 'chimp-jsocks-lib'  }
failsafe = { module = 'dev.failsafe:failsafe', version.ref = 'failsafe-lib' }
apache-httpcomponents-httpclient = { module = 'org.apache.httpcomponents:httpclient', version.ref = 'apache-httpcomponents-httpclient-lib' }
google-guava = { module = 'com.google.guava:guava', version.ref = 'google-guava-lib' }

# koin
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }


# mp-settings
multiplatform-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatform-settings" }
androidx-ui-graphics-android = { group = "androidx.compose.ui", name = "ui-graphics-android", version.ref = "uiGraphicsAndroid" }

[bundles]


[plugins]
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
buildconfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildconfig" }
protobuf = { id = "com.google.protobuf", version.ref = "protobuf" }
ksp = { id = "com.google.devtools.ksp", version.ref="ksp" }
