[versions]

# -------------------- Project Specific --------------------
bisq-core = "2.1.7"
bisq-core-commit = "d73864d095f6c1f143c853905d45bb7d297278c1"
# API version is usually same as bisq-core but for more control we keep it separated
#bisq-api = "2.1.7"

# -------------------- Kotlin & JetBrains --------------------
kotlin = "2.2.10"
kotlinx-coroutines = "1.10.2"
kotlinx-datetime = "0.4.0"
kotlinx-serialization = "1.9.0"
atomicfu = "0.29.0"
compose-plugin = "1.8.2"
ksp = "2.2.10-2.0.2"

# -------------------- Android --------------------
#noinspection AndroidGradlePluginVersion - we need to stick to it based on https://developer.android.com/build/kotlin-support
agp = "8.10.1"
android-ndk = "26.1.10909125"
android-compileSdk = "35"
android-targetSdk = "35"
android-minSdk = "24"
# TODO analyse lowering back to API 31 when Bisq2 full J17 support is returned and we can get rid of desugaring
android-node-minSdk = "33"
desugar_jdk_libs = "2.1.5"
android-mlkit-barcode-scanning = "17.3.0"

# -------------------- AndroidX --------------------
androidx-core = "1.16.0"
androidx-activity-compose = "1.10.1"
androidx-lifecycle = "2.9.2"
androidx-multidex = "2.0.1"
androidx-core-splashscreen = "1.0.1"
androidx-navigation-compose = "2.9.0"
androidx-datastore = "1.1.7"
androidx-camera = "1.5.0"

# -------------------- UI / Compose --------------------
compose-material-icons = "1.8.2"
coil-compose = "3.3.0"

# -------------------- Multiplatform Libraries --------------------
bignum-lib = "0.3.10"
# kmp-tor for embedded Tor support
kmp-tor = "2.4.1"
kmp-tor-resource = "408.17.0"
kermit = "2.0.8"

# -------------------- Testing --------------------
androidx-test = "1.7.0"
androidx-test-junit = "1.3.0"
androidx-test-compose = "1.9.0"
androidx-test-espresso = "3.7.0"
robolectric = "4.10.3"
junit = "4.13.2"
mockk = "1.13.12"

# -------------------- Networking --------------------
ktor = "3.2.3"
okio = "3.16.0"

# -------------------- Dependency Injection --------------------
koin = "4.1.0"

# -------------------- Build & Utilities --------------------
buildconfig = "5.5.4"
protobuf = "0.9.4"
protob = "4.28.2"
process-phoenix = "3.0.0"

# -------------------- Bisq Core Transitive Dependencies --------------------
chimp-jsocks-lib = { strictly = '567e1cd6' }
failsafe-lib = { strictly = '3.2.4' }
bouncycastle-lib = { strictly = '1.78.1' }
google-guava-lib = { strictly = '33.2.1-jre' }
apache-httpcomponents-httpclient-lib = { strictly = '4.5.14' } # 5.3.1 would be better but has lot of API changes
lombok-lib = { strictly = '1.18.34' }
typesafe-config-lib = { strictly = '1.4.3' }

chimp-jtorctl-lib = { strictly = '9b5ba203' }
apache-commons-lang-lib = { strictly = '3.14.0' }
apache-httpcomponents-core-lib = { strictly = '4.4.16' }
apache-tomcat-annotations-api = { strictly = '6.0.53' }
assertj-core-lib = { strictly = '3.22.0' }
glassfish-jersey-lib = { strictly = '3.1.8' }
glassfish-jaxb-runtime-lib = { strictly = '4.0.5' }
google-gson-lib = { strictly = '2.9.0' }
grpc = { strictly = '1.61.0' }
i2p-lib = { strictly = '1.8.0' }
i2p-v2 = { strictly = '2.4.0' }
jackson-lib = { strictly = '2.17.2' }

[libraries]
# -------------------- Kotlin & JetBrains --------------------
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "atomicfu" }

# -------------------- Android & AndroidX --------------------
androidx-core = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity-compose" }
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "androidx-core-splashscreen" }
androidx-lifecycle-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
androidx-datastore-okio = { module = "androidx.datastore:datastore-core-okio", version.ref = "androidx-datastore" }
androidx-multidex = { module = "androidx.multidex:multidex", version.ref = "androidx-multidex" }
navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "androidx-navigation-compose" }
desugar_jdk_libs = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar_jdk_libs" }
android-mlkit-barcode-scanning = { module = "com.google.mlkit:barcode-scanning", version.ref = "android-mlkit-barcode-scanning" }
androidx-camera-camera2 = { module = "androidx.camera:camera-camera2", version.ref = "androidx-camera" }
androidx-camera-core = { module = "androidx.camera:camera-core", version.ref = "androidx-camera" }
androidx-camera-extensions = { module = "androidx.camera:camera-extensions", version.ref = "androidx-camera" }
androidx-camera-lifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "androidx-camera" }
androidx-camera-view = { module = "androidx.camera:camera-view", version.ref = "androidx-camera" }

# -------------------- UI / Compose --------------------
compose-material-icons-extended = { module = "org.jetbrains.compose.material:material-icons-extended", version.ref = "compose-material-icons" }
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil-compose" }

# -------------------- Testing --------------------
androidx-test-core = { module = "androidx.test:core", version.ref = "androidx-test" }
androidx-test-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-test-junit" }
androidx-test-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "androidx-test-espresso" }
androidx-test-compose-junit4 = { module = "androidx.compose.ui:ui-test-junit4-android", version.ref = "androidx-test-compose" }
androidx-test-compose-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "androidx-test-compose" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
junit = { module = "junit:junit", version.ref = "junit" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockk-common = { module = "io.mockk:mockk-common", version.ref = "mockk" }
mockk-darwin = { module = "io.mockk:mockk-darwin", version.ref = "mockk" }


# -------------------- Multiplatform Libraries --------------------
logging-kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
kmp-tor-runtime = { module = "io.matthewnelson.kmp-tor:runtime", version.ref = "kmp-tor" }
kmp-tor-resource-exec = { module = "io.matthewnelson.kmp-tor:resource-exec-tor-gpl", version.ref = "kmp-tor-resource" }
bignum = { module = "com.ionspin.kotlin:bignum", version.ref = "bignum-lib" }

# -------------------- Networking --------------------
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-websockets = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }

# -------------------- Dependency Injection --------------------
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }

# -------------------- Utilities --------------------
protoc = { module = "com.google.protobuf:protoc", version.ref = "protob" }
process-phoenix = { module = "com.jakewharton:process-phoenix", version.ref = "process-phoenix" }

# -------------------- Bisq Core Modules --------------------
bisq-core-common = { module = "bisq:common", version.ref = "bisq-core" }
bisq-core-security = { module = "bisq:security", version.ref = "bisq-core" }
bisq-core-settings = { module = "bisq:settings", version.ref = "bisq-core" }
bisq-core-support = { module = "bisq:support", version.ref = "bisq-core" }
bisq-core-trade = { module = "bisq:trade", version.ref = "bisq-core" }
bisq-core-user = { module = "bisq:user", version.ref = "bisq-core" }
bisq-core-network-network = { module = "network:network", version.ref = "bisq-core" }
bisq-core-network-network-identity = { module = "network:network-identity", version.ref = "bisq-core" }
bisq-core-network-socks5-socket-channel = { module = "network:socks5-socket-channel", version.ref = "bisq-core" }
bisq-core-network-i2p = { module = "network:i2p", version.ref = "bisq-core" }
bisq-core-offer = { module = "bisq:offer", version.ref = "bisq-core" }
bisq-core-persistence = { module = "bisq:persistence", version.ref = "bisq-core" }
bisq-core-presentation = { module = "bisq:presentation", version.ref = "bisq-core" }
bisq-core-account = { module = "bisq:account", version.ref = "bisq-core" }
bisq-core-application = { module = "bisq:application", version.ref = "bisq-core" }
bisq-core-bonded-roles = { module = "bisq:bonded-roles", version.ref = "bisq-core" }
bisq-core-chat = { module = "bisq:chat", version.ref = "bisq-core" }
bisq-core-contract = { module = "bisq:contract", version.ref = "bisq-core" }
bisq-core-i18n = { module = "bisq:i18n", version.ref = "bisq-core" }
bisq-core-identity = { module = "bisq:identity", version.ref = "bisq-core" }
bisq-core-bisq-easy = { module = "bisq:bisq-easy", version.ref = "bisq-core" }

# -------------------- Bisq Core Transitive Dependencies --------------------
chimp-jsocks = { module = 'com.github.chimp1984:jsocks', version.ref = 'chimp-jsocks-lib' }
failsafe = { module = 'dev.failsafe:failsafe', version.ref = 'failsafe-lib' }
apache-httpcomponents-httpclient = { module = 'org.apache.httpcomponents:httpclient', version.ref = 'apache-httpcomponents-httpclient-lib' }
google-guava = { module = 'com.google.guava:guava', version.ref = 'google-guava-lib' }
lombok = { module = 'org.projectlombok:lombok', version.ref = 'lombok-lib' }
typesafe-config = { module = 'com.typesafe:config', version.ref = 'typesafe-config-lib' }
bouncycastle = { module = 'org.bouncycastle:bcprov-jdk18on', version.ref = 'bouncycastle-lib' }
bouncycastle-pg = { module = 'org.bouncycastle:bcpg-jdk18on', version.ref = 'bouncycastle-lib' }

#kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
#androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
#androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidx-espresso-core" }
#androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidx-appcompat" }
#androidx-material = { group = "com.google.android.material", name = "material", version.ref = "androidx-material" }
#androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "androidx-constraintlayout" }

#chimp-jtorctl = { module = 'com.github.chimp1984:jtorctl', version.ref = 'chimp-jtorctl-lib' }
#apache-commons-lang = { module = 'org.apache.commons:commons-lang3', version.ref = 'apache-commons-lang-lib' }
#apache-httpcomponents-core = { module = 'org.apache.httpcomponents:httpcore', version.ref = 'apache-httpcomponents-core-lib' }
#apache-tomcat-annotations-api = { module = 'org.apache.tomcat:annotations-api', version.ref = 'apache-tomcat-annotations-api' }
#assertj-core = { module = 'org.assertj:assertj-core', version.ref = 'assertj-core-lib' }
#glassfish-jersey-jdk-http = { module = 'org.glassfish.jersey.containers:jersey-container-jdk-http', version.ref = 'glassfish-jersey-lib' }
#glassfish-jersey-json-jackson = { module = 'org.glassfish.jersey.media:jersey-media-json-jackson', version.ref = 'glassfish-jersey-lib' }
#glassfish-jersey-inject-hk2 = { module = 'org.glassfish.jersey.inject:jersey-hk2', version.ref = 'glassfish-jersey-lib' }
#glassfish-jaxb-runtime = { module = 'org.glassfish.jaxb:jaxb-runtime', version.ref = 'glassfish-jaxb-runtime-lib' }

#google-gson = { module = 'com.google.code.gson:gson', version.ref = 'google-gson-lib' }

#grpc-netty-shaded = { module = 'io.grpc:grpc-netty-shaded', version.ref = 'grpc' }
#grpc-protobuf = { module = 'io.grpc:grpc-protobuf', version.ref = 'grpc' }
#grpc-services = { module = 'io.grpc:grpc-services', version.ref = 'grpc' }
#grpc-stub = { module = 'io.grpc:grpc-stub', version.ref = 'grpc' }


#i2p-core = { module = 'net.i2p:i2p', version.ref = 'i2p-lib' }
#i2p-core-v2 = { module = 'net.i2p:i2p', version.ref = 'i2p-v2' }
#i2p-streaming = { module = 'net.i2p.client:streaming', version.ref = 'i2p-lib' }
#i2p-streaming-v2 = { module = 'net.i2p.client:streaming', version.ref = 'i2p-v2' }
#i2p-router = { module = 'net.i2p:router', version.ref = 'i2p-lib' }

#jackson-core = { module = 'com.fasterxml.jackson.core:jackson-core', version.ref = 'jackson-lib' }
#jackson-annotations = { module = 'com.fasterxml.jackson.core:jackson-annotations', version.ref = 'jackson-lib' }
#jackson-databind = { module = 'com.fasterxml.jackson.core:jackson-databind', version.ref = 'jackson-lib' }

[bundles]
#glassfish-jersey = ['glassfish-jersey-jdk-http', 'glassfish-jersey-json-jackson', 'glassfish-jersey-inject-hk2', 'glassfish-jaxb-runtime']
#grpc = ['grpc-protobuf', 'grpc-services', 'grpc-stub']
#i2p = ['i2p-core', 'i2p-router', 'i2p-streaming']
#i2p-v2 = ['i2p-core-v2', 'i2p-streaming-v2']
#jackson = ['jackson-core', 'jackson-annotations', 'jackson-databind']
camera = ["androidx-camera-core", "androidx-camera-lifecycle", "androidx-camera-camera2", "androidx-camera-view", "androidx-camera-extensions"]

[plugins]
kotlin-cocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
buildconfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildconfig" }
protobuf = { id = "com.google.protobuf", version.ref = "protobuf" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
atomicfu = { id = "org.jetbrains.kotlinx.atomicfu", version.ref = "atomicfu" }
